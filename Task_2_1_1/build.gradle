plugins {
    id 'java'
    id 'jacoco'
    id 'java-library'
    id "me.champeau.jmh" version "0.6.8"
    id "io.morethan.jmhreport" version "0.9.0"
}

group 'ru.nsu.fit.melnikov'
version 'unspecified'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    // https://mvnrepository.com/artifact/org.openjdk.jmh/jmh-core
    testImplementation 'org.openjdk.jmh:jmh-core:1.36'
    // https://mvnrepository.com/artifact/org.openjdk.jmh/jmh-generator-annprocess
    testAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.36'
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
    useJUnitPlatform()
}

jmh {
    resultsFile = project.file("src/test/java/ru/nsu/fit/oop/melnikov/prime/numbers/benchmark_results/results.json")
    timeOnIteration = "200ms"
    warmup = "200ms"
    resultFormat = "JSON"
}

jmhReport {
    jmhResultPath = project.file('src/test/java/ru/nsu/fit/oop/melnikov/prime/numbers/benchmark_results/results.json')
    jmhReportOutput = project.file('src/test/java/ru/nsu/fit/oop/melnikov/prime/numbers/benchmark_results')
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('reports/jacoco')
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}